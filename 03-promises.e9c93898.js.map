{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBA2BxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IApCPR,EAAOgB,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBAKN,IAJA,IACIC,EAAYC,OAAOjB,EAAQkB,OAC3BC,EAAOF,OAAOhB,EAAOiB,OACrBE,EAAOJ,EAAYG,EACdE,EAAI,EAAGA,EAAIJ,OAAOf,EAASgB,OAAQG,GAAK,EAG/ClB,EAFQ,EACRiB,GAAQD,GAEPG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAEhDuB,QAAQC,IAAI,uBAAwCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DyB,OAAM,SAAAP,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOM,QACd,sBAAuCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAE/CuB,QAAQC,IAAI,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  let amount = 0;\n  let timeDelay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n  let time = timeDelay - step;\n  for (let i = 0; i < Number(amountEl.value); i += 1) {\n    amount =+ 1;\n    time += step;\n    createPromise(amount, time)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n      );\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms`\n      );\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({position, delay});\n      }\n    }, delay);\n  });\n }\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","timeDelay","Number","value","step","time","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.e9c93898.js.map"}